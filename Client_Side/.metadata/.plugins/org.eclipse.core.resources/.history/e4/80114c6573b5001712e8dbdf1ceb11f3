package UI.Frames.Statistics;

import java.io.IOException;
import java.net.UnknownHostException;
import java.util.Map;
import java.util.Vector;
import java.util.Map.Entry;

import javax.swing.JCheckBox;
import javax.swing.JPanel;

import Customer.eCustomer;
import Items.ItemAmount;
import Items.eItemCategory;
import ServerFunctions.FromServerException;
import ServerFunctions.ServerFunctionExecuter;
import UI.Frames.tableFrame;

@SuppressWarnings("serial")
public class byCategoryFrame extends tableFrame
{
	private Vector<JCheckBox> categoryCheckBoxes;
	
	public byCategoryFrame() throws Exception
	{
		super();
	}

	@Override
	protected  void setTableData(Vector<Vector<Object>> i_Data) throws UnknownHostException, IOException, FromServerException {
		
		for(eItemCategory category : eItemCategory.values()){
		  Map<eItemCategory, ItemAmount> dataFromServer = ServerFunctionExecuter.getInstance().GetTodaysSalesReportByCategorys(new String [] {category.name()});
  		  for(Entry<eItemCategory,ItemAmount> Row : dataFromServer.entrySet()){
  			  i_Data.add(new Vector<Object>(){{
  				  	this.add(Row.getValue().getItemCategory());
			   	  		this.add(Row.getValue().getAmount());
			   	  		this.add(Row.getValue().getBranch().toString());
  			  }});
  		  }
		}
	}
	
	@Override
	protected JPanel createMainPanel()
	{
		JPanel myMainPanel = new JPanel();
		categoryCheckBoxes = new Vector<JCheckBox>();
		
		JCheckBox currentCheckBox;
		
		for(eItemCategory category : eItemCategory.values())
		{
			currentCheckBox = new JCheckBox(category.name());
			categoryCheckBoxes.add(currentCheckBox);
			myMainPanel.add(currentCheckBox);
		}
		
		myMainPanel.add(super.createMainPanel());
		return myMainPanel;
	}
	
	
	
	@Override
	protected Vector<String> getColumnsNames() {
		Vector<String> columnNames = new Vector<String>();
		columnNames.add("Category");
		columnNames.add("Amount");
		columnNames.add("Branch");
		return columnNames;
	}

	@Override
	protected String getFrameTitle() {
		return "Report by category";
	}
}
