package ServerFunctions;

import static org.junit.Assert.*;

import java.io.IOException;
import java.net.UnknownHostException;
import org.json.JSONException;
import org.json.JSONObject;
import org.junit.Test;

import Customer.CreateCustomerException;
import Workers.CreateWorkerException;
import Workers.Seller;
import Workers.Worker;
import Workers.eBranches;
import UI.inputCheck;

public class ServerFunctionExecuterTest {

	@Test
	public void checkPhoneTest(){
		
		//----- check incorrect phone number ----
		String phone = new String("6503793797");
		String expected = "illegal action. Phone number must contain only legal phone number!";
		try{
			 inputCheck.checkPhone(phone);
		}
		catch(Exception exc){
			assertEquals(expected, exc.getMessage());
		}
		//----- check correct phone number ----	
		String correctPhone = new String("0526669999");
		try{
			 inputCheck.checkPhone(phone);
		}
		catch(Exception exc){
			assertEquals(expected, exc.getMessage());
		}
		assertEquals("Worked", "Worked");
	}
	
	@Test
	public void SignInTest(){
		
		//----  Correct Sign In   ------
		String user = new String("3");
		String Pass = new String("123");
		//TODO:
		String jsonExpecteduser = "{\"workerNumber\":\"3\",\"firstName\":\"Moshe\",\"lastName\":\"zeavi\",\"phoneNumber\":\"0543973112\",\"bankAccountNumber\":\"1\",\"ID\":\"3\",\"type\":\"ShiftManager\",\"branch\":\"RishonLeZion\"}";
		try {
			assertEquals(jsonExpecteduser, ServerFunctionExecuter.getInstance().SignIn(user, Pass).GetJSONObject().toString());
		}
		catch (JSONException | IOException | FromServerException | CreateWorkerException ignore){}
		
		//logout
		try {
			ServerFunctionExecuter.getInstance().SignOut();
		} 
		catch (IOException | FromServerException ignore){}
		
		//----  Incorrect Sign In   ------
		String IncorrectPass = new String("12");
		String expectedMessage = new String("Worker number or Password are incorrect!");
		try {
			assertEquals(jsonExpecteduser, ServerFunctionExecuter.getInstance().SignIn(user, IncorrectPass).GetJSONObject().toString());
		}
		catch (JSONException | IOException | FromServerException | CreateWorkerException e){
			assertEquals(expectedMessage, e.getMessage());
		}
		
		//logout
		try {
			ServerFunctionExecuter.getInstance().SignOut();
		}
		catch (IOException | FromServerException ignore){}
	}
	
	@Test
	public void getCustomerByIdTest(){
		//TODO:
		//login
		try{
			ServerFunctionExecuter.getInstance().SignIn("2", "123");
		}
		catch (JSONException | IOException | FromServerException | CreateWorkerException e1){
		}
		//----  Correct getCustomerById  ----
		String id = "2";
		String jsonExpecteduser = "{\"firstName\":\"Tamir\",\"lastName\":\"sh\",\"phoneNumber\":\"053242343\",\"ID\":\"2\",\"type\":\"VipCustomer\"}";
		try {
			assertEquals(jsonExpecteduser, ServerFunctionExecuter.getInstance().GetCustomerById(id).GetJSONObject().toString());
		} 
		catch (JSONException | IOException | FromServerException | CreateCustomerException ignore) {}
		
		//----  Incorrect getCustomerById  ----
		String incorrectId = "555";
		String expectedMessage = new String("Couldnt Finde The Values :\nID : 555 , ");
		try {
			assertEquals(jsonExpecteduser, ServerFunctionExecuter.getInstance().GetCustomerById(incorrectId).GetJSONObject().toString());
		}
		catch (JSONException | IOException | FromServerException | CreateCustomerException e){
			assertEquals(expectedMessage, e.getMessage());
		}
		
		//logout
		try {
			ServerFunctionExecuter.getInstance().SignOut();
		}
		catch (IOException | FromServerException ignore){}
	}
	
	@Test
	public void addNewWorkerTest(){
		//login
		try{
			ServerFunctionExecuter.getInstance().SignIn("2", "123");
		} 
		catch (JSONException | IOException | FromServerException | CreateWorkerException e1) {}
		//---- Trying to add new worker with existing id ----
		
		eBranches branch = null;
		
		try{
			branch = ServerFunctionExecuter.getInstance().GetLoggedInUser().getBranch();
		}
		catch (IOException e){}
		
		Seller newSeller = new Seller("103","Shika","Israeli","0503793797",branch,"101","1");
		String jsonExpectedMessage = "ID : 103 all ready exists!";
		try{
			ServerFunctionExecuter.getInstance().AddWorker(newSeller, "123");
		} 
		catch (IOException | FromServerException e){
			assertEquals(jsonExpectedMessage, e.getMessage());	
		}
				
		//logout
		try{
			ServerFunctionExecuter.getInstance().SignOut();
		}
		catch (IOException | FromServerException ignore){}
	}
		
	@Test
	public void CheckLoggedInUserTest(){
		//login
		try{
			ServerFunctionExecuter.getInstance().SignIn("2", "123");
		} 
		catch (JSONException | IOException | FromServerException | CreateWorkerException e1) {}
		//----  Check Logged In User  ----
		String jsonExpecteduser = "Karin Levi (2)";
		try {
			assertEquals(jsonExpecteduser, ServerFunctionExecuter.getInstance().GetLoggedInUser().toString());
		} 
		catch (IOException e) {}
		
		//logout
		try{
			ServerFunctionExecuter.getInstance().SignOut();
		}
		catch (IOException | FromServerException ignore){}
	}
	@Test
	public void checkSignOutTest(){
		//login
		try{
			ServerFunctionExecuter.getInstance().SignIn("2", "123");
		} 
		catch (JSONException | IOException | FromServerException | CreateWorkerException e1) {}
		//---- Log Out ----
		try {
			ServerFunctionExecuter.getInstance().SignOut();
		}
		catch (IOException | FromServerException e) {}
		
		try {
			assertEquals(":" + '"', ServerFunctionExecuter.getInstance().GetLoggedInUser().toString());
		}
		catch (IOException e) {}
	}

}
