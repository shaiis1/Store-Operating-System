package UI.Frames;

import java.awt.event.ActionListener;
import java.io.IOException;
import java.net.UnknownHostException;
import java.util.Vector;

import javax.swing.JCheckBox;
import javax.swing.JPanel;

import org.json.JSONException;

import Customer.CreateCustomerException;
import ServerFunctions.FromServerException;
import ServerFunctions.ServerFunctionExecuter;
import Workers.CreateWorkerException;

public abstract class checkBoxTabledFrame extends tableFrame
{
	protected Vector<Vector<Object>> myTableData;
	protected Vector<JCheckBox> myCheckBoxes;
	
	public checkBoxTabledFrame()
	{
		super();
	}
	
	@Override
	protected JPanel createMainPanel()
	{
		JPanel tablePanel = super.createMainPanel();
		JPanel myMainPanel = new JPanel();
		
		for(JCheckBox checkBox : myCheckBoxes)
		{
			myMainPanel.add(checkBox);
			checkBox.addActionListener(setCheckboxActionListener(checkBox));
		}
		
		myMainPanel.add(tablePanel);
		
		return myMainPanel;
		
	}
	
	

	protected abstract ActionListener setCheckboxActionListener(JCheckBox checkBox);

	@Override
	protected Vector<Vector<Object>> createTableData() throws UnknownHostException, IOException,FromServerException, JSONException, CreateCustomerException, CreateWorkerException {

		myTableData = new Vector<Vector<Object>>();
		createMyCheckBoxes(getCheckboxValues());
		return myTableData;
	}
	
	private void createMyCheckBoxes(String [] values)
	{
		myCheckBoxes =  new Vector<JCheckBox>();
		for(int i=0;i<values.length;i++)
		{
			myCheckBoxes.add(new JCheckBox(values[i]));
		}
	}

	protected abstract String [] getCheckboxValues();
	

}
